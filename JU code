import logging
import random
from telegram.ext import Application, MessageHandler, filters, CommandHandler
import requests
from telegram import ReplyKeyboardMarkup
import re


BOT_TOKEN = '6075495935:AAHVyGMuHJUzgOrG0SLCLeuW9pXcDaVVl7I'
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)
logger = logging.getLogger(__name__)
reply_keyboard = [['/kinkoalu', '/kinpandu', '/kinkenguru', '/start', '/pomogi'],
                  ['/kinsobaku', "/kinlisu", "/kincota", "/kinptitsu", "/kinenota", "/kinkita"]]
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)


async def diolog(update, context):
    await update.message.reply_text(["Отвали", 'Отстань', 'Свали', 'Не мешай мне', 'Отвянь',
                                     'Я смотрю сериал, отвали'][random.randint(0, 7)])


def get_enot_url():
    con = requests.get('https://some-random-api.ml/img/raccoon').json()
    url = con['link']
    return url


def get_kenguru_url():
    con = requests.get('https://some-random-api.ml/img/kangaroo').json()
    url = con['link']
    return url


def get_kit_url():
    con = requests.get('https://some-random-api.ml/img/whale').json()
    url = con['link']
    return url


def get_koala_url():
    con = requests.get('https://some-random-api.ml/img/koala').json()
    url = con['link']
    return url


def get_panda_url():
    con = requests.get('https://some-random-api.ml/img/panda').json()
    url = con['link']
    return url


def get_dog_url():
    con = requests.get('https://random.dog/woof.json').json()
    url = con['url']
    return url


def get_bird_url():
    con = requests.get('https://some-random-api.ml/img/bird').json()
    url = con['link']
    return url


def get_cat_url():
    con = requests.get('https://api.thecatapi.com/v1/images/search').json()[0]
    url = con['url']
    return url


def get_fox_url():
    conn = requests.get('https://randomfox.ca/floof/').json()
    urll = conn['image']
    return urll


def get_photo_enot_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_enot_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_kit_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_kit_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_panda_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_panda_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_koala_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_koala_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_kenguru_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_kenguru_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_dog_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_dog_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_bird_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_bird_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_fox_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_fox_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


def get_photo_cat_url():
    ext = ['jpg', 'jpeg', 'png']
    file_ext = ''
    while file_ext not in ext:
        url = get_cat_url()
        file_ext = re.search("([^.]*)$", url).group(1).lower()
    return url


async def enot(update, context):
    url = get_photo_enot_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def dog(update, context):
    url = get_photo_dog_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def kenguru(update, context):
    url = get_photo_kenguru_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def panda(update, context):
    url = get_photo_panda_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def koala(update, context):
    url = get_photo_koala_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def kit(update, context):
    url = get_photo_kit_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def bird(update, context):
    url = get_photo_bird_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def fox(update, context):
    url = get_photo_fox_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def cat(update, context):
    url = get_photo_cat_url()
    chat_id = update.message.chat_id
    await context.bot.send_photo(chat_id=chat_id, photo=url)


async def start(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf"Ну привет, {user.mention_html()}, я JU, если нечего сказать, то остань от меня, и не мешай смотреть сериал."
        rf"Обращайся только по делу: /pomogi - список моих талантов, /kinsobaku - ну ты сам попросил "
        rf"/kinlisu - странные у тебя просьбы, /kincota - с тобой явно что-то не так, /kinptitsu - вылетит птичка, "
        rf"/kinenota - а тут енот, /kinPandu - панда, \n /kinKoalu - коала, " 
        rf"/kinKenguru - кенгуру, /kinKita - кит", reply_markup=markup)


async def help_command(update, context):
    await update.message.reply_text("НИЧЕГО НЕ МОЖЕТ САМ, Я УСТАЛА ПОВТОРЯТЬ: \n /pomogi - список моих таллантов, "
                                    "\n /kinSobaku - ну ты сам попросил, \n /kinLisu - странные у тебя просьбы,"
                                    "\n /kinCota - с тобой явно что-то не так, \n /kinPtitsu - вылетит птичка,"
                                    "\n /kinEnota - а тут енот, \n /kinPandu - панда, \n /kinKoalu - коала,"
                                    "\n /kinKenguru - кенгуру, \n /kinKita - кит")


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    text_handler = MessageHandler(filters.TEXT, diolog)
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("pomogi", help_command))
    application.add_handler(CommandHandler("kinsobaku", dog))
    application.add_handler(CommandHandler("kinlisu", fox))
    application.add_handler(CommandHandler("kincota", cat))
    application.add_handler(CommandHandler("kinptitsu", bird))
    application.add_handler(CommandHandler("kinenota", enot))
    application.add_handler(CommandHandler("kinkenguru", kenguru))
    application.add_handler(CommandHandler("kinpandu", panda))
    application.add_handler(CommandHandler("kinkoalu", koala))
    application.add_handler(CommandHandler("kinkita", kit))
    application.add_handler(text_handler)
    application.run_polling()


if __name__ == '__main__':
    main()
